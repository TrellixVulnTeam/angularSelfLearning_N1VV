{"ast":null,"code":"import { catchError, map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport { baseURL } from '../shared/baseurl';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./process-httpmsg.service\";\nexport let DishService = /*#__PURE__*/(() => {\n  class DishService {\n    constructor(http, processHTTPMsgService) {\n      this.http = http;\n      this.processHTTPMsgService = processHTTPMsgService;\n    }\n\n    getDishes() {\n      return this.http.get(baseURL + 'dishes').pipe(catchError(this.processHTTPMsgService.handleError));\n    }\n\n    getDish(id) {\n      return this.http.get(baseURL + 'dishes/' + id).pipe(catchError(this.processHTTPMsgService.handleError));\n    }\n\n    getFeaturedDish() {\n      return this.http.get(baseURL + 'dishes?featured=true').pipe(map(dishes => dishes[0])).pipe(catchError(this.processHTTPMsgService.handleError));\n    }\n\n    getDishIds() {\n      return this.getDishes().pipe(map(dishes => dishes.map(dish => dish.id))).pipe(catchError(error => error));\n    }\n\n    putDish(dish) {\n      const httpOprions = {\n        headers: new HttpHeaders({\n          'ContentType': 'application/json'\n        })\n      };\n      return this.http.put(baseURL + 'dishes/' + dish.id, dish, httpOprions).pipe(catchError(this.processHTTPMsgService.handleError));\n    }\n\n  }\n\n  DishService.ɵfac = function DishService_Factory(t) {\n    return new (t || DishService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ProcessHTTPMsgService));\n  };\n\n  DishService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DishService,\n    factory: DishService.ɵfac,\n    providedIn: 'root'\n  });\n  return DishService;\n})();","map":null,"metadata":{},"sourceType":"module"}